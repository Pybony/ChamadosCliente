package br.com.chamados.model;
// Generated 30/08/2015 21:21:25 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Chamado generated by hbm2java
 */
@Entity
@Table(name="chamado"
    ,catalog="chamados"
)
public class Chamado  implements java.io.Serializable {


     private Integer id;
     private CategoriaUm categoriaUm;
     private Chamado chamado;
     private Cliente cliente;
     private Funcionario funcionario;
     private Origim origim;
     private Pessoa pessoa;
     private Prioridade prioridade;
     private Situacao situacao;
     private Tipo tipo;
     private int idAbertura;
     private String titulo;
     private String descricao;
     private Date dataAbertura;
     private Date dataFechamento;
     private Date dataPrevista;
     private Set chamados = new HashSet(0);
     private Set interacaos = new HashSet(0);

    public Chamado() {
    }

	
    public Chamado(CategoriaUm categoriaUm, Origim origim, Prioridade prioridade, Situacao situacao, Tipo tipo, int idAbertura, String titulo) {
        this.categoriaUm = categoriaUm;
        this.origim = origim;
        this.prioridade = prioridade;
        this.situacao = situacao;
        this.tipo = tipo;
        this.idAbertura = idAbertura;
        this.titulo = titulo;
    }
    public Chamado(CategoriaUm categoriaUm, Chamado chamado, Cliente cliente, Funcionario funcionario, Origim origim, Pessoa pessoa, Prioridade prioridade, Situacao situacao, Tipo tipo, int idAbertura, String titulo, String descricao, Date dataAbertura, Date dataFechamento, Date dataPrevista, Set chamados, Set interacaos) {
       this.categoriaUm = categoriaUm;
       this.chamado = chamado;
       this.cliente = cliente;
       this.funcionario = funcionario;
       this.origim = origim;
       this.pessoa = pessoa;
       this.prioridade = prioridade;
       this.situacao = situacao;
       this.tipo = tipo;
       this.idAbertura = idAbertura;
       this.titulo = titulo;
       this.descricao = descricao;
       this.dataAbertura = dataAbertura;
       this.dataFechamento = dataFechamento;
       this.dataPrevista = dataPrevista;
       this.chamados = chamados;
       this.interacaos = interacaos;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="categoria_um_id", nullable=false)
    public CategoriaUm getCategoriaUm() {
        return this.categoriaUm;
    }
    
    public void setCategoriaUm(CategoriaUm categoriaUm) {
        this.categoriaUm = categoriaUm;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_chamado_principal")
    public Chamado getChamado() {
        return this.chamado;
    }
    
    public void setChamado(Chamado chamado) {
        this.chamado = chamado;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="cliente_id")
    public Cliente getCliente() {
        return this.cliente;
    }
    
    public void setCliente(Cliente cliente) {
        this.cliente = cliente;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="funcionario_id")
    public Funcionario getFuncionario() {
        return this.funcionario;
    }
    
    public void setFuncionario(Funcionario funcionario) {
        this.funcionario = funcionario;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="origem_id", nullable=false)
    public Origim getOrigim() {
        return this.origim;
    }
    
    public void setOrigim(Origim origim) {
        this.origim = origim;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="pessoa_id")
    public Pessoa getPessoa() {
        return this.pessoa;
    }
    
    public void setPessoa(Pessoa pessoa) {
        this.pessoa = pessoa;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="prioridade_id", nullable=false)
    public Prioridade getPrioridade() {
        return this.prioridade;
    }
    
    public void setPrioridade(Prioridade prioridade) {
        this.prioridade = prioridade;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="situacao_id", nullable=false)
    public Situacao getSituacao() {
        return this.situacao;
    }
    
    public void setSituacao(Situacao situacao) {
        this.situacao = situacao;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="tipo_id", nullable=false)
    public Tipo getTipo() {
        return this.tipo;
    }
    
    public void setTipo(Tipo tipo) {
        this.tipo = tipo;
    }

    
    @Column(name="id_abertura", nullable=false)
    public int getIdAbertura() {
        return this.idAbertura;
    }
    
    public void setIdAbertura(int idAbertura) {
        this.idAbertura = idAbertura;
    }

    
    @Column(name="titulo", nullable=false, length=45)
    public String getTitulo() {
        return this.titulo;
    }
    
    public void setTitulo(String titulo) {
        this.titulo = titulo;
    }

    
    @Column(name="descricao", length=45)
    public String getDescricao() {
        return this.descricao;
    }
    
    public void setDescricao(String descricao) {
        this.descricao = descricao;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="data_abertura", length=0)
    public Date getDataAbertura() {
        return this.dataAbertura;
    }
    
    public void setDataAbertura(Date dataAbertura) {
        this.dataAbertura = dataAbertura;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="data_fechamento", length=0)
    public Date getDataFechamento() {
        return this.dataFechamento;
    }
    
    public void setDataFechamento(Date dataFechamento) {
        this.dataFechamento = dataFechamento;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="data_prevista", length=0)
    public Date getDataPrevista() {
        return this.dataPrevista;
    }
    
    public void setDataPrevista(Date dataPrevista) {
        this.dataPrevista = dataPrevista;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="chamado")
    public Set getChamados() {
        return this.chamados;
    }
    
    public void setChamados(Set chamados) {
        this.chamados = chamados;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="chamado")
    public Set getInteracaos() {
        return this.interacaos;
    }
    
    public void setInteracaos(Set interacaos) {
        this.interacaos = interacaos;
    }




}


